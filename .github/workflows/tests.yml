name: Run Tests

on: [push, pull_request] # Runs on every push & PR

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set DATABASE_URL environment variable
        run: echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV

      - name: Create complete .env file
        run: |
          cat > .env << EOL
          ELASTIC_USERNAME=${{ secrets.ELASTIC_USERNAME }}
          ELASTIC_PASSWORD=${{ secrets.ELASTIC_PASSWORD }}
          ELASTIC_HOSTS=${{ secrets.ELASTIC_HOSTS }}
          KIBANA_PASSWORD=${{ secrets.KIBANA_PASSWORD }}
          STACK_VERSION=${{ secrets.STACK_VERSION }}
          CLUSTER_NAME=${{ secrets.CLUSTER_NAME }}
          LICENSE=${{ secrets.LICENSE }}
          ES_PORT=${{ secrets.ES_PORT }}
          KIBANA_PORT=${{ secrets.KIBANA_PORT }}
          EOL

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: backend/tests/package.json

      - name: Install backend Dependencies
        run: cd backend/user_service && npm install

      - name: Install test Dependencies
        run: cd backend/tests && npm install

      - name: Init database
        run: cd backend/user_service && bash database/db_entrypoint.sh

      - name: Run Tests
        run: cd backend/tests && npm test

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: game
        run: cd backend; ls
      - name: Create .env file
        run: echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> backend/game_service/.env

      - name: user
        run: cd backend; ls
      - name: Create .env file
        run: echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> backend/user_service/.env

      - name: Create complete .env file
        run: |
          cat > .env << EOL
          ELASTIC_USERNAME=${{ secrets.ELASTIC_USERNAME }}
          ELASTIC_PASSWORD=${{ secrets.ELASTIC_PASSWORD }}
          ELASTIC_HOSTS=${{ secrets.ELASTIC_HOSTS }}
          KIBANA_PASSWORD=${{ secrets.KIBANA_PASSWORD }}
          STACK_VERSION=${{ secrets.STACK_VERSION }}
          CLUSTER_NAME=${{ secrets.CLUSTER_NAME }}
          LICENSE=${{ secrets.LICENSE }}
          ES_PORT=${{ secrets.ES_PORT }}
          KIBANA_PORT=${{ secrets.KIBANA_PORT }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CALLBACK_URL=${{ secrets.GOOGLE_CALLBACK_URL }}
          FASTIFY_SECURE_SECRET=${{ secrets.FASTIFY_SECURE_SECRET }}
          EOL

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: e2e/package.json

      - name: Build Project
        run: make

      - name: Install Dependencies
        run: cd e2e && npm install

      - name: wait server to run
        run: sleep 10
      - name: Run E2E Tests
        run: cd e2e && npm test
