worker_processes	auto;

events {
    worker_connections 1024;  # Maximum number of simultaneous connections
}

http {
	server_tokens off;
	ignore_invalid_headers on;
    limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;

    server {
        listen 8080;
        server_name localhost;
        return 301 https://$server_name$request_uri;
    }

	server {
    	listen 4433 ssl;
	    server_name localhost;

	    ssl_certificate /etc/nginx/ssl/cert.pem;
	    ssl_certificate_key /etc/nginx/ssl/key.pem;
		ssl_protocols TLSv1.2 TLSv1.3;

	    add_header X-Frame-Options "SAMEORIGIN";
	    add_header X-XSS-Protection "1; mode=block";
	    add_header X-Content-Type-Options "nosniff";
	    add_header Content-Security-Policy "default-src 'self';";
	    add_header Referrer-Policy "strict-origin-origin-when-cross-origin";
		add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

	    client_max_body_size 10M;
	    client_body_buffer_size 128k;

		location / {
	        # Rate limiting
	        limit_req zone=one burst=5;

	        # Input validation
	        if ($query_string ~* "[;'\"<>]") {
	            return 403;
	        }
	        if ($request_uri ~* "(\\%27|\\%22|\\%3C|\\%3E|\\%3B)") {
	            return 403;
	        }

			limit_except GET POST {
				deny all;
			}

	        proxy_pass http://file_service:3000;
	        proxy_http_version 1.1;
	        proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection 'upgrade';
	        proxy_set_header Host localhost;
	        proxy_cache_bypass $http_upgrade;
	    }
		# Authentication service
	    location /auth/ {
			rewrite ^/auth(/.*)$ $1 break;
			proxy_pass http://auth_service:3000/;
		}
		# User management servive
		location /user/ {
			rewrite ^/user(/.*)$ $1 break;
  			proxy_pass http://user_service:3001/;
		}
		# Game service 
		location /game/ {
			rewrite ^/game(/.*)$ $1 break;
  			proxy_pass http://game_service:3002/;
		}
		
		# Block sensitive files
	    location ~ \.(htaccess|htpasswd|ini|phps|fla|psd|log|sh)$ {
	        deny all;
	    }

	    # Block path traversal
	    location ~ \.\. {
	        deny all;
	    }
	}
}
