worker_processes auto;

events {
    worker_connections 1024;  # Maximum number of simultaneous connections
}

http {
    server_tokens off;
    ignore_invalid_headers on;
    limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;

	log_format json_combined escape=json '{ "time_local": "$time_local", '
                        '"remote_addr": "$remote_addr", '
                        '"request": "$request", '
                        '"method": "$request_method", '
                        '"status": "$status", '
                        '"body_bytes_sent": "$body_bytes_sent", '
                        '"http_referer": "$http_referer", '
                        '"http_user_agent": "$http_user_agent", '
                        '"request_time": "$request_time" }';

	access_log /var/log/nginx/access.log json_combined;
	error_log /var/log/nginx/error.log;
    #gzip on;
    #gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
    #gzip_min_length 256;
    #gzip_vary on;
    #gzip_proxied any;

    server {
        listen 8080;
        server_name localhost;
        return 301 https://file_service:3000;
    }

    # Server HTTPS
    server {
        listen 4433 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;

        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
        add_header Content-Security-Policy "default-src 'self'; base-uri 'self'; font-src 'self' https: data:; form-action 'self'; frame-ancestors 'self'; img-src 'self' data: blob:; object-src 'none'; script-src 'self'; script-src-attr 'none'; style-src 'self' https: 'unsafe-inline'; upgrade-insecure-requests; connect-src 'self' http://localhost:3003 https://accounts.google.com https://www.googleapis.com https://oauth2.googleapis.com;" always;

		add_header Referrer-Policy "strict-origin-origin-when-cross-origin";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        client_max_body_size 10M;
        client_body_buffer_size 128k;

		location / {
	        # Rate limiting
	        limit_req zone=one burst=5;

	        # Input validation
	        if ($query_string ~* "[;'\"<>]") {
	            return 403;
	        }
	        if ($request_uri ~* "(\\%27|\\%22|\\%3C|\\%3E|\\%3B)") {
	            return 403;
	        }
			proxy_intercept_errors on;
   			error_page 404 = /index.html;
			limit_except GET POST {
				deny all;
			}
        	# try_files $uri $uri/ /index.html;

	        proxy_pass https://file_service:3000;
			proxy_ssl_certificate /etc/nginx/ssl/file_service.cert.pem;
			proxy_ssl_certificate_key /etc/nginx/ssl/file_service.key.pem;
			proxy_ssl_protocols TLSv1.2 TLSv1.3;
			proxy_ssl_verify off;
	        proxy_http_version 1.1;
	        proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection 'upgrade';
	        proxy_set_header Host localhost;
	        proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_buffering on;
            proxy_buffers 16 4k;
            proxy_busy_buffers_size 8k;
            proxy_cache_lock on;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

	    }
		# Game service
		location /games/ {
  			proxy_pass https://game_service:3001/api/;
    		proxy_ssl_certificate /etc/nginx/ssl/game_service.cert.pem;
			proxy_ssl_certificate_key /etc/nginx/ssl/game_service.key.pem;
			proxy_ssl_protocols TLSv1.2 TLSv1.3;
			proxy_ssl_verify off;
			proxy_buffering on;
            proxy_buffers 16 4k;
            proxy_busy_buffers_size 8k;
            proxy_cache_lock on;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

		}
		# User management service
		location /users/ {
  			proxy_pass https://user_service:3002/api/;
			proxy_ssl_certificate /etc/nginx/ssl/user_service.cert.pem;
			proxy_ssl_certificate_key /etc/nginx/ssl/user_service.key.pem;
			proxy_ssl_protocols TLSv1.2 TLSv1.3;
			proxy_ssl_verify off;
			proxy_buffering on;
            proxy_buffers 16 4k;
            proxy_busy_buffers_size 8k;
            proxy_cache_lock on;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

		}
		# Authentication service
        location /auth/google {
            proxy_pass https://googlesignin:3003;
            proxy_ssl_certificate /etc/nginx/ssl/googleAuth.cert.pem;
            proxy_ssl_certificate_key /etc/nginx/ssl/googleAuth.key.pem;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
			proxy_ssl_verify off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
		# Profile pic uploads
		location /uploads/ {
			alias /app/uploads/;
			 add_header Cache-Control "no-cache, must-revalidate";
		}
        location = /callback.html {
            proxy_pass http://googlesignin:3003/callback.html;
            proxy_set_header Host $host;
        }

		# Block sensitive files
	    location ~ \.(htaccess|htpasswd|ini|phps|fla|psd|log|sh)$ {
	        deny all;
	    }

        # Block path
        location ~ \.\. {
            deny all;
        }

        # location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg|eot|otf|ttc|mp4|webm|ogg|ogv|json|xml)$ {
        # expires 30d;
        # add_header Cache-Control "public, immutable";
        #}

    }
}
